# General hardening sysctls.

# Stop low-level messages on console
kernel.printk = 3 4 1 3

# Mitigate kernel pointer leaks.
# Set to 1 by default to only hide pointers from processes without the
# CAP_SYSLOG capability.
# Set to 2 to hide from all processes if extra paranoid.
kernel.kptr_restrict=1

# Increase bits of entropy used for mmap ASLR.
# Improves ASLR effectiveness.
vm.mmap_rnd_bits=32
vm.mmap_rnd_compat_bits=16

# Restrict eBPF to the CAP_BPF capability
net.core.bpf_jit_harden=2

# Restrict loading TTY line disciplines to
# the CAP_SYS_MODULE capability.
dev.tty.ldisc_autoload=0

# Restrict the userfaultfd() syscall to the
# CAP_SYS_PTRACE capability.
vm.unprivileged_userfaultfd=0

# Disable kexec system call.
kernel.kexec_load_disabled=1

# Restrict usage of ptrace to processes with
# the CAP_SYS_PTRACE capability. Set to 3 to
# disable completely if extra paranoid.
kernel.yama.ptrace_scope=2

# Accommodate the very large number of guard pages created by hardened_malloc
vm.max_map_count = 1048576

# Prevent creating files in world-writable directories.

# 0 = writing to files/FIFOs is unrestricted.
# 1 = don't allow O_CREAT open on files/FIFOs that we don't own in world
# writable sticky directories, unless they are owned by the owner of
# the directory
# 2 = Same as one, but also applies to group writable sticky directories.
fs.protected_fifos=2

# Already set to two in kernel, but keeping here as a reminder.
#fs.protected_regular=2

# User can only use secure attention key. Can be set to 0 to completely
# disable the SysRq key.
#kernel.sysrq=4

# Disable User Namespaces, as it opens up a large attack surface to
# unprivileged users. Some users may need to comment this out.
#user.max_user_namespaces = 0

# Restrict the usage of user namespaces to the CAP_SYS_ADMIN capability
# kernel.unprivileged_userns_clone=0

