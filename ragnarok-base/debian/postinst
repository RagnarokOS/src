#!/bin/sh

set -e

# Handle nftables.conf. We can't provide nftables.conf via the ragnarok-base
# package since it's already provided by nftables. Hacky, but
# that's how it's done.
/usr/bin/cat /usr/share/doc/nftables/examples/ragnarok.nft > /etc/nftables.conf

# Set proper file permissions. dpkg sets all files to 755 and that's not
# rite mate. This is hell, but it works.
/usr/bin/chmod 600 /boot/grub/*
/usr/bin/chmod 644 /etc/apt/preferences.d/*
/usr/bin/chmod 644 /etc/apt/sources.list.d/*
/usr/bin/chmod 644 /etc/apt/trusted.gpg.d/*
/usr/bin/chmod 755 /etc/cron.daily/update-manpages
/usr/bin/chmod 600 /etc/default/grub.d/*
/usr/bin/chmod 644 /etc/default/grub
/usr/bin/chmod 644 /etc/dpkg/buildflags.conf
/usr/bin/chmod 755 /etc/init.d/*
/usr/bin/chmod 644 /etc/logrotate.d/*
/usr/bin/chmod 644 /etc/rsyslog.d/*
/usr/bin/chmod 644 /etc/signify/*
/usr/bin/chmod 644 /etc/skel/.aliases
/usr/bin/chmod 644 /etc/skel/.profile
/usr/bin/chmod 644 /etc/sysctl.d/*
/usr/bin/chmod 700 /etc/nftables.conf
/usr/bin/chmod 755 /usr/bin/kernupd
/usr/bin/chmod 644 /usr/share/doc/nftables/examples/ragnarok.nft
/usr/bin/chmod 644 /usr/share/mk/*

# Ensure that the proper .profile is used. This is a crude hack, but it
# allows setting .profile to ours without the need to rebuild/maintain
# the bash package (which is a silly thing to do just to remove a single
# file).
/usr/bin/cp /etc/skel/.profile /etc/skel/.bash_profile
/usr/bin/cp /etc/skel/ksh.profile /etc/skel/.profile
