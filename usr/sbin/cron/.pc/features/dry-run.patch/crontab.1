.\"/* Copyright 1988,1990,1993 by Paul Vixie
.\" * All rights reserved
.\" *
.\" * Distribute freely, except: don't remove my name from the source or
.\" * documentation (don't take credit for my work), mark your changes (don't
.\" * get me blamed for your possible bugs), don't alter or remove this
.\" * notice.  May be sold if buildable source is provided to buyer.  No
.\" * warrantee of any kind, express or implied, is included with this
.\" * software; use at your own risk, responsibility for damages (if any) to
.\" * anyone resulting from the use of this software rests entirely with the
.\" * user.
.\" *
.\" * Send bug reports, bug fixes, enhancements, requests, flames, etc., and
.\" * I'll try to keep a version up to date.  I can be reached as follows:
.\" * Paul Vixie          <paul@vix.com>          uunet!decwrl!vixie!paul
.\" */
.\"
.\" $Id: crontab.1,v 2.4 1993/12/31 10:47:33 vixie Exp $
.\"
.TH CRONTAB 1 "19 April 2010"
.UC 4
.SH NAME
crontab \- maintain crontab files for individual users (Vixie Cron)
.SH SYNOPSIS
crontab [ \-u user ] file
.br
crontab [ \-u user ] [ \-i ] { \-e | \-l | \-r }
.SH DESCRIPTION
.I crontab
is the program used to install, deinstall or list the tables
used to drive the
.IR cron (8)
daemon in Vixie Cron.  Each user can have their own crontab, and though
these are files in /var/spool/cron/crontabs,
they are not intended to be edited directly.
.PP
If the
.I /etc/cron.allow
file exists, then you must be listed (one user per line) therein in order to be
allowed to use this command.  If the
.I /etc/cron.allow
file does not exist but the
.I /etc/cron.deny
file does exist, then you must \fBnot\fR be listed in the
.I /etc/cron.deny
file in order to use this command.
.PP
If neither of these files exists, then depending on site-dependent
configuration parameters, only the super user will be allowed to use this
command, or all users will be able to use this command.
.PP
If both files exist then
.I /etc/cron.allow
takes precedence.  Which means that
.I /etc/cron.deny
is not considered and your user must be listed in
.I /etc/cron.allow
in order to be able to use the crontab.
.PP
Regardless of the existence of any of these files, the root administrative
user is always allowed to setup a crontab.  For standard Debian systems, all
users may use this command.
.PP
If the
.I \-u
option is given, it specifies the name of the user whose crontab is to be
used (when listing) or modified (when editing).  If this option is not given,
.I crontab
examines "your" crontab, i.e., the crontab of the person executing the
command.  Note that
.IR su (8)
can confuse
.I crontab
and that if you are running inside of
.IR su (8)
you should always use the
.I \-u
option for safety's sake.
.PP
The first form of this command is used to install a new crontab from some
named file or standard input if the pseudo-filename ``-'' is given.
.PP
The
.I \-l
option causes the current crontab to be displayed on standard output.  See
the note under
.B DEBIAN SPECIFIC
below.
.PP
The
.I \-r
option causes the current crontab to be removed.
.PP
The
.I \-e
option is used to edit the current crontab using the editor specified by
the \s-1VISUAL\s+1 or \s-1EDITOR\s+1 environment variables.
After you exit
from the editor, the modified crontab will be installed automatically.  If
neither of the environment variables is defined, then the
default editor /usr/bin/editor is used.
.PP
The
.I \-i
option modifies the \-r option to prompt the user for a 'y/Y' response
before actually removing the crontab.
.SH DEBIAN SPECIFIC
The "out-of-the-box" behaviour for
.I crontab \-l
is to display the three line "DO NOT EDIT THIS FILE" header
that is placed at the
beginning of the crontab when it is installed.  The problem is that
it makes the sequence
.PP
crontab \-l | crontab \-
.PP
non-idempotent \(em you keep adding copies of the header.  This causes
pain to scripts that use sed to edit a crontab.  Therefore, the default
behaviour of the
.B \-l
option has been changed to not output such header.  You may obtain the
original behaviour by setting the environment variable
.B CRONTAB_NOHEADER
to 'N', which will cause the
.I crontab \-l
command to emit the extraneous header.
.SH "SEE ALSO"
crontab(5), cron(8)
.SH FILES
.nf
/etc/cron.allow
/etc/cron.deny
/var/spool/cron/crontabs
.fi
.PP
The files
.I /etc/cron.allow
and
.I /etc/cron.deny
if, they exist, must be either world-readable, or readable by group
``crontab''. If they are not, then cron will deny access to all users until the
permissions are fixed.
.PP
There is one file for each user's crontab under the /var/spool/cron/crontabs
directory.  Users are not allowed to edit the files under that directory
directly to ensure that only users allowed by the system to run periodic tasks
can add them, and only syntactically correct crontabs will be written there.
This is enforced by having the directory writable only by the
.I crontab
group and configuring
.I crontab
command with the setgid bid set for that specific group.
.SH STANDARDS
The
.I crontab
command conforms to IEEE Std1003.2-1992 (``POSIX'').  This new command syntax
differs from previous versions of Vixie Cron, as well as from the classic
SVR3 syntax.

.SH DIAGNOSTICS
A fairly informative usage message appears if you run it with a bad command
line.

cron requires that each entry in a crontab end in a newline character.  If the
last entry in a crontab is missing the newline, cron will consider the crontab
(at least partially) broken and refuse to install it.

The files under
.I
/var/spool/cron/crontabs
are named based on the user's account name.
Crontab jobs will not be run for users whose accounts have been
renamed either due to changes in the local system or because they are
managed through a central user database (external to the system, for
example an LDAP directory).


.SH AUTHOR
Paul Vixie <paul@vix.com> is the author of
.I cron
and original creator of this manual page.  This page has also been modified for
Debian by Steve Greenland, Javier Fernandez-Sanguino and Christian Kastner.
