#
# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2018-2023 Gavin D. Howard and contributors.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# *** WARNING: Autogenerated from Makefile.in. DO NOT MODIFY ***
#
.POSIX:

ROOTDIR = .
INCDIR = $(ROOTDIR)/include
SRCDIR = $(ROOTDIR)/src
TESTSDIR = $(ROOTDIR)/tests
SCRIPTSDIR = $(ROOTDIR)/scripts
GENDIR = $(ROOTDIR)/gen

BUILDDIR = /home/user/bc

SRC =  ./src/args.c ./src/bc.c ./src/bc_lex.c ./src/bc_parse.c ./src/data.c ./src/dc.c ./src/dc_lex.c ./src/dc_parse.c ./src/file.c ./src/lang.c ./src/lex.c ./src/main.c ./src/num.c ./src/opt.c ./src/parse.c ./src/program.c ./src/rand.c ./src/read.c ./src/vector.c ./src/vm.c 
OBJ =  src/args.o src/bc.o src/bc_lex.o src/bc_parse.o src/data.o src/dc.o src/dc_lex.o src/dc_parse.o src/file.o src/lang.o src/lex.o src/main.o src/num.o src/opt.o src/parse.o src/program.o src/rand.o src/read.o src/vector.o src/vm.o
GCDA =  src/args.gcda src/bc.gcda src/bc_lex.gcda src/bc_parse.gcda src/data.gcda src/dc.gcda src/dc_lex.gcda src/dc_parse.gcda src/file.gcda src/lang.gcda src/lex.gcda src/main.gcda src/num.gcda src/opt.gcda src/parse.gcda src/program.gcda src/rand.gcda src/read.gcda src/vector.gcda src/vm.gcda
GCNO =  src/args.gcno src/bc.gcno src/bc_lex.gcno src/bc_parse.gcno src/data.gcno src/dc.gcno src/dc_lex.gcno src/dc_parse.gcno src/file.gcno src/lang.gcno src/lex.gcno src/main.gcno src/num.gcno src/opt.gcno src/parse.gcno src/program.gcno src/rand.gcno src/read.gcno src/vector.gcno src/vm.gcno

BC_ENABLED_NAME = BC_ENABLED
BC_ENABLED = 1
DC_ENABLED_NAME = DC_ENABLED
DC_ENABLED = 1

HEADERS = $(INCDIR)/args.h $(INCDIR)/file.h $(INCDIR)/lang.h $(INCDIR)/lex.h $(INCDIR)/num.h $(INCDIR)/opt.h $(INCDIR)/parse.h $(INCDIR)/program.h $(INCDIR)/read.h $(INCDIR)/status.h $(INCDIR)/vector.h $(INCDIR)/vm.h
BC_HEADERS = $(INCDIR)/bc.h
DC_HEADERS = $(INCDIR)/dc.h
HISTORY_HEADERS = $(INCDIR)/history.h
EXTRA_MATH_HEADERS = $(INCDIR)/rand.h
LIBRARY_HEADERS = $(INCDIR)/bcl.h $(INCDIR)/library.h

GEN_DIR = ./gen
GEN = strgen
GEN_EXEC = $(GEN_DIR)/$(GEN)
GEN_C = $(GENDIR)/$(GEN).c

GEN_EMU = 

BC_LIB = $(GENDIR)/lib.bc
BC_LIB_C = $(GEN_DIR)/lib.c
BC_LIB_O = $(GEN_DIR)/lib.o
BC_LIB_GCDA = $(GEN_DIR)/lib.gcda
BC_LIB_GCNO = $(GEN_DIR)/lib.gcno

BC_LIB2 = $(GENDIR)/lib2.bc
BC_LIB2_C = $(GEN_DIR)/lib2.c
BC_LIB2_O = $(GEN_DIR)/lib2.o
BC_LIB2_GCDA = $(GEN_DIR)/lib2.gcda
BC_LIB2_GCNO = $(GEN_DIR)/lib2.gcno

BC_HELP = $(GENDIR)/bc_help.txt
BC_HELP_C = $(GEN_DIR)/bc_help.c
BC_HELP_O = $(GEN_DIR)/bc_help.o
BC_HELP_GCDA = $(GEN_DIR)/bc_help.gcda
BC_HELP_GCNO = $(GEN_DIR)/bc_help.gcno

DC_HELP = $(GENDIR)/dc_help.txt
DC_HELP_C = $(GEN_DIR)/dc_help.c
DC_HELP_O = $(GEN_DIR)/dc_help.o
DC_HELP_GCDA = $(GEN_DIR)/dc_help.gcda
DC_HELP_GCNO = $(GEN_DIR)/dc_help.gcno

BIN = bin
EXEC_SUFFIX = 
EXEC_PREFIX = 

BC = bc
DC = dc
BC_EXEC = $(BIN)/$(EXEC_PREFIX)$(BC)
DC_EXEC = $(BIN)/$(EXEC_PREFIX)$(DC)

BC_TEST_OUTPUTS = tests/bc_outputs
BC_FUZZ_OUTPUTS = tests/fuzzing/bc_outputs1 tests/fuzzing/bc_outputs2 tests/fuzzing/bc_outputs3
DC_TEST_OUTPUTS = tests/dc_outputs
DC_FUZZ_OUTPUTS = tests/fuzzing/dc_outputs

LIB = libbcl
LIB_NAME = $(LIB).a
LIBBC = $(BIN)/$(LIB_NAME)
BCL = bcl
BCL_TEST = $(BIN)/$(BCL)
BCL_TEST_C = $(TESTSDIR)/$(BCL).c

MANUALS = manuals
BC_MANPAGE_NAME = $(EXEC_PREFIX)$(BC)$(EXEC_SUFFIX).1
BC_MANPAGE = $(MANUALS)/$(BC).1
BC_MD = $(BC_MANPAGE).md
DC_MANPAGE_NAME = $(EXEC_PREFIX)$(DC)$(EXEC_SUFFIX).1
DC_MANPAGE = $(MANUALS)/$(DC).1
DC_MD = $(DC_MANPAGE).md
BCL_MANPAGE_NAME = bcl.3
BCL_MANPAGE = $(MANUALS)/$(BCL_MANPAGE_NAME)
BCL_MD = $(BCL_MANPAGE).md

MANPAGE_INSTALL_ARGS = -Dm644
BINARY_INSTALL_ARGS = -Dm755
PC_INSTALL_ARGS = $(MANPAGE_INSTALL_ARGS)

BCL_PC = $(BCL).pc
PC_PATH = 

BCL_HEADER_NAME = bcl.h
BCL_HEADER = $(INCDIR)/$(BCL_HEADER_NAME)


BINDIR = /usr/bin
INCLUDEDIR = /usr/include
LIBDIR = /usr/lib
MAN1DIR = /usr/share/man/man1
MAN3DIR = /usr/share/man/man3
MAIN_EXEC = $(EXEC_PREFIX)$(BC)$(EXEC_SUFFIX)
EXEC = $(BC_EXEC)
NLSPATH = /usr/share/locale/%L/%N

BC_BUILD_TYPE = H

BC_ENABLE_LIBRARY = 0

BC_ENABLE_HISTORY = 0
BC_ENABLE_EXTRA_MATH_NAME = BC_ENABLE_EXTRA_MATH
BC_ENABLE_EXTRA_MATH = 1
BC_ENABLE_NLS = 1
BC_EXCLUDE_EXTRA_MATH = 0

BC_ENABLE_AFL = 0
BC_ENABLE_MEMCHECK = 0

BC_DEFAULT_BANNER = 0
BC_DEFAULT_SIGINT_RESET = 1
DC_DEFAULT_SIGINT_RESET = 1
BC_DEFAULT_TTY_MODE = 1
DC_DEFAULT_TTY_MODE = 0
BC_DEFAULT_PROMPT = 1
DC_DEFAULT_PROMPT = 0
BC_DEFAULT_EXPR_EXIT = 1
DC_DEFAULT_EXPR_EXIT = 1
BC_DEFAULT_DIGIT_CLAMP = 0
DC_DEFAULT_DIGIT_CLAMP = 0

RM = rm
MKDIR = mkdir

SCRIPTS = ./scripts

MINISTAT = ministat
MINISTAT_EXEC = $(SCRIPTS)/$(MINISTAT)

BITFUNCGEN = bitfuncgen
BITFUNCGEN_EXEC = $(SCRIPTS)/$(BITFUNCGEN)

INSTALL = $(SCRIPTSDIR)/exec-install.sh
SAFE_INSTALL = $(SCRIPTSDIR)/safe-install.sh
LINK = $(SCRIPTSDIR)/link.sh
MANPAGE = $(SCRIPTSDIR)/manpage.sh
KARATSUBA = $(SCRIPTSDIR)/karatsuba.py
LOCALE_INSTALL = $(SCRIPTSDIR)/locale_install.sh
LOCALE_UNINSTALL = $(SCRIPTSDIR)/locale_uninstall.sh

VALGRIND_ARGS = --error-exitcode=100 --leak-check=full --show-leak-kinds=all --errors-for-leak-kinds=all

TEST_STARS = ***********************************************************************

BC_NUM_KARATSUBA_LEN = 32

BC_DEFS0 = -DBC_DEFAULT_BANNER=$(BC_DEFAULT_BANNER)
BC_DEFS1 = -DBC_DEFAULT_SIGINT_RESET=$(BC_DEFAULT_SIGINT_RESET)
BC_DEFS2 = -DBC_DEFAULT_TTY_MODE=$(BC_DEFAULT_TTY_MODE)
BC_DEFS3 = -DBC_DEFAULT_PROMPT=$(BC_DEFAULT_PROMPT)
BC_DEFS4 = -DBC_DEFAULT_EXPR_EXIT=$(BC_DEFAULT_EXPR_EXIT)
BC_DEFS5 = -DBC_DEFAULT_DIGIT_CLAMP=$(BC_DEFAULT_DIGIT_CLAMP)
BC_DEFS = $(BC_DEFS0) $(BC_DEFS1) $(BC_DEFS2) $(BC_DEFS3) $(BC_DEFS4) $(BC_DEFS5)
DC_DEFS1 = -DDC_DEFAULT_SIGINT_RESET=$(DC_DEFAULT_SIGINT_RESET)
DC_DEFS2 = -DDC_DEFAULT_TTY_MODE=$(DC_DEFAULT_TTY_MODE)
DC_DEFS3 = -DDC_DEFAULT_PROMPT=$(DC_DEFAULT_PROMPT)
DC_DEFS4 = -DDC_DEFAULT_EXPR_EXIT=$(DC_DEFAULT_EXPR_EXIT)
DC_DEFS5 = -DDC_DEFAULT_DIGIT_CLAMP=$(DC_DEFAULT_DIGIT_CLAMP)
DC_DEFS = $(DC_DEFS1) $(DC_DEFS2) $(DC_DEFS3) $(DC_DEFS4) $(DC_DEFS5)

CPPFLAGS1 = -D$(BC_ENABLED_NAME)=$(BC_ENABLED) -D$(DC_ENABLED_NAME)=$(DC_ENABLED)
CPPFLAGS2 = $(CPPFLAGS1) -I$(INCDIR)/ -DBUILD_TYPE=$(BC_BUILD_TYPE) 
CPPFLAGS3 = $(CPPFLAGS2) -DEXECPREFIX=$(EXEC_PREFIX) -DMAINEXEC=$(MAIN_EXEC)
CPPFLAGS4 = $(CPPFLAGS3)  
CPPFLAGS5 = $(CPPFLAGS4) -DBC_NUM_KARATSUBA_LEN=$(BC_NUM_KARATSUBA_LEN)
CPPFLAGS6 = $(CPPFLAGS5) -DBC_ENABLE_NLS=$(BC_ENABLE_NLS)
CPPFLAGS7 = $(CPPFLAGS6) -D$(BC_ENABLE_EXTRA_MATH_NAME)=$(BC_ENABLE_EXTRA_MATH)
CPPFLAGS8 = $(CPPFLAGS7) -DBC_ENABLE_HISTORY=$(BC_ENABLE_HISTORY) -DBC_ENABLE_LIBRARY=$(BC_ENABLE_LIBRARY)
CPPFLAGS = $(CPPFLAGS8) -DBC_ENABLE_MEMCHECK=$(BC_ENABLE_MEMCHECK) -DBC_ENABLE_AFL=$(BC_ENABLE_AFL)
CFLAGS = $(CPPFLAGS) $(BC_DEFS) $(DC_DEFS) -DNDEBUG -D_FORTIFY_SOURCE=2 -D_POSIX_C_SOURCE=200809L -D_XOPEN_SOURCE=700 -O2 -fstack-clash-protection -fstack-protector-strong --param=ssp-buffer-size=4 -fcf-protection -DBC_ENABLE_EDITLINE=0 -DBC_ENABLE_READLINE=0
LDFLAGS = -s -Wl,-z,relro,-z,now -Wl,-zdefs

HOSTCFLAGS = -O2 -fstack-clash-protection -fstack-protector-strong --param=ssp-buffer-size=4 -fcf-protection

CC = clang
HOSTCC = clang

BC_LIB_C_ARGS = bc_lib bc_lib_name $(BC_ENABLED_NAME) 1
BC_LIB2_C_ARGS = bc_lib2 bc_lib2_name "$(BC_ENABLED_NAME) && $(BC_ENABLE_EXTRA_MATH_NAME)" 1

OBJS = $(DC_HELP_O) $(BC_HELP_O) $(BC_LIB_O) $(BC_LIB2_O) $(OBJ)

all: $(DC_EXEC)

$(DC_EXEC): $(BC_EXEC)
	$(LINK) $(BIN) $(EXEC_PREFIX)$(DC)

$(BC_EXEC): $(BIN) $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) $(LDFLAGS) -o $(EXEC)

$(GEN_DIR):
	mkdir -p $(GEN_DIR)

$(GEN_EXEC): $(GEN_DIR)
	$(HOSTCC) -DBC_ENABLE_AFL=0 -I./include/  $(HOSTCFLAGS) -o $(GEN_EXEC) $(GEN_C)

$(BC_LIB_C): $(GEN_EXEC) $(BC_LIB)
	$(GEN_EMU) $(GEN_EXEC) $(BC_LIB) $(BC_LIB_C) $(BC_EXCLUDE_EXTRA_MATH) $(BC_LIB_C_ARGS) "" "" 1

$(BC_LIB_O): $(BC_LIB_C)
	$(CC) $(CFLAGS) -o $@ -c $<

$(BC_LIB2_C): $(GEN_EXEC) $(BC_LIB2)
	$(GEN_EMU) $(GEN_EXEC) $(BC_LIB2) $(BC_LIB2_C) $(BC_EXCLUDE_EXTRA_MATH) $(BC_LIB2_C_ARGS) "" "" 1

$(BC_LIB2_O): $(BC_LIB2_C)
	$(CC) $(CFLAGS) -o $@ -c $<

$(BC_HELP_C): $(GEN_EXEC) $(BC_HELP)
	$(GEN_EMU) $(GEN_EXEC) $(BC_HELP) $(BC_HELP_C) $(BC_EXCLUDE_EXTRA_MATH) bc_help "" $(BC_ENABLED_NAME) 0

$(BC_HELP_O): $(BC_HELP_C)
	$(CC) $(CFLAGS) -o $@ -c $<

$(DC_HELP_C): $(GEN_EXEC) $(DC_HELP)
	$(GEN_EMU) $(GEN_EXEC) $(DC_HELP) $(DC_HELP_C) $(BC_EXCLUDE_EXTRA_MATH) dc_help "" $(DC_ENABLED_NAME) 0

$(DC_HELP_O): $(DC_HELP_C)
	$(CC) $(CFLAGS) -o $@ -c $<

$(BIN):
	$(MKDIR) -p $(BIN)

src:
	$(MKDIR) -p src

headers: $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS)

$(MINISTAT):
	mkdir -p $(SCRIPTS)
	$(HOSTCC) $(HOSTCFLAGS) -lm -o $(MINISTAT_EXEC) $(ROOTDIR)/scripts/ministat.c

$(BITFUNCGEN):
	mkdir -p $(SCRIPTS)
	$(HOSTCC) $(HOSTCFLAGS) -lm -o $(BITFUNCGEN_EXEC) $(ROOTDIR)/scripts/bitfuncgen.c

help:
	@printf 'available targets:\n'
	@printf '\n'
	@printf '    all (default)   builds bc and dc\n'
	@printf '    check           alias for `make test`\n'
	@printf '    clean           removes all build files\n'
	@printf '    clean_config    removes all build files as well as the generated Makefile\n'
	@printf '    clean_tests     removes all build files, the generated Makefile,\n'
	@printf '                    and generated tests\n'
	@printf '    install         installs binaries to "%s%s"\n' "$(DESTDIR)" "$(BINDIR)"
	@printf '                    and (if enabled) manpages to "%s%s"\n' "$(DESTDIR)" "$(MAN1DIR)"
	@printf '    karatsuba       runs the karatsuba script (requires Python 3)\n'
	@printf '    karatsuba_test  runs the karatsuba script while running tests\n'
	@printf '                    (requires Python 3)\n'
	@printf '    uninstall       uninstalls binaries from "%s%s"\n' "$(DESTDIR)" "$(BINDIR)"
	@printf '                    and (if enabled) manpages from "%s%s"\n' "$(DESTDIR)" "$(MAN1DIR)"
	@printf '    test            runs the test suite\n'
	@printf '    test_bc         runs the bc test suite, if bc has been built\n'
	@printf '    test_dc         runs the dc test suite, if dc has been built\n'
	@printf '    time_test       runs the test suite, displaying times for some things\n'
	@printf '    time_test_bc    runs the bc test suite, displaying times for some things\n'
	@printf '    time_test_dc    runs the dc test suite, displaying times for some things\n'
	@printf '    timeconst       runs the test on the Linux timeconst.bc script,\n'
	@printf '                    if it exists and bc has been built\n'

run_all_tests: bc_all_tests timeconst_all_tests dc_all_tests

run_all_tests_np: bc_all_tests_np timeconst_all_tests dc_all_tests_np

bc_all_tests:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/all.sh bc 1 1 0 1 0 $(BC_EXEC)

bc_all_tests_np:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/all.sh -n bc 1 1 0 1 0 $(BC_EXEC)

timeconst_all_tests:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/bc/timeconst.sh $(TESTSDIR)/bc/scripts/timeconst.bc $(BC_EXEC)

dc_all_tests:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/all.sh dc 1 1 0 1 0 $(DC_EXEC)

dc_all_tests_np:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/all.sh -n dc 1 1 0 1 0 $(DC_EXEC)

history_all_tests:
	@printf 'Skipping history tests...\n'

check: test

test: test_bc timeconst test_dc

test_bc: test_bc_header test_bc_tests test_bc_scripts test_bc_errors test_bc_stdin test_bc_read test_bc_other
	@printf '\nAll bc tests passed.\n\n$(TEST_STARS)\n'

test_bc_tests: test_bc_decimal test_bc_print test_bc_parse test_bc_lib2 test_bc_print2 test_bc_length test_bc_scale test_bc_shift test_bc_add test_bc_subtract test_bc_multiply test_bc_divide test_bc_modulus test_bc_power test_bc_sqrt test_bc_trunc test_bc_places test_bc_vars test_bc_boolean test_bc_comp test_bc_abs test_bc_assignments test_bc_functions test_bc_scientific test_bc_engineering test_bc_globals test_bc_strings test_bc_strings2 test_bc_letters test_bc_exponent test_bc_log test_bc_pi test_bc_arctangent test_bc_sine test_bc_cosine test_bc_bessel test_bc_fib test_bc_arrays test_bc_misc test_bc_misc1 test_bc_misc2 test_bc_misc3 test_bc_misc4 test_bc_misc5 test_bc_misc6 test_bc_misc7 test_bc_misc8 test_bc_void test_bc_rand test_bc_rand_limits test_bc_recursive_arrays test_bc_divmod test_bc_modexp test_bc_bitfuncs test_bc_leadingzero test_bc_is_number test_bc_is_string test_bc_asciify_array test_bc_line_by_line1 test_bc_line_by_line2 test_bc_line_loop_quit1 test_bc_line_loop_quit2

test_bc_scripts: test_bc_script_multiply test_bc_script_divide test_bc_script_subtract test_bc_script_add test_bc_script_print test_bc_script_parse test_bc_script_root test_bc_script_array test_bc_script_array2 test_bc_script_atan test_bc_script_bessel test_bc_script_functions test_bc_script_globals test_bc_script_len test_bc_script_rand test_bc_script_references test_bc_script_screen test_bc_script_strings2 test_bc_script_ifs test_bc_script_ifs2 test_bc_script_afl1 test_bc_script_i2rand

test_bc_stdin:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/stdin.sh bc $(BC_EXEC)

test_bc_read:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/read.sh bc $(BC_EXEC)

test_bc_errors: test_bc_error_lines test_bc_error_01.txt test_bc_error_02.txt test_bc_error_03.txt test_bc_error_04.txt test_bc_error_05.txt test_bc_error_06.txt test_bc_error_07.txt test_bc_error_08.txt test_bc_error_09.txt test_bc_error_10.txt test_bc_error_11.txt test_bc_error_12.txt test_bc_error_13.txt test_bc_error_14.txt test_bc_error_15.txt test_bc_error_16.txt test_bc_error_17.txt test_bc_error_18.txt test_bc_error_19.txt test_bc_error_20.txt test_bc_error_21.txt test_bc_error_22.txt test_bc_error_23.txt test_bc_error_24.txt test_bc_error_25.txt test_bc_error_26.txt test_bc_error_27.txt test_bc_error_28.txt test_bc_error_29.txt test_bc_error_30.txt test_bc_error_31.txt test_bc_error_32.txt test_bc_error_33.txt test_bc_error_34.txt test_bc_error_35.txt test_bc_error_36.txt

test_bc_error_lines:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/errors.sh bc $(BC_EXEC)

test_bc_other:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/other.sh bc $(BC_ENABLE_EXTRA_MATH) $(BC_EXEC)

test_bc_header:
	@printf '$(TEST_STARS)\n\nRunning bc tests...\n\n'

test_dc: test_dc_header test_dc_tests test_dc_scripts test_dc_errors test_dc_stdin test_dc_read test_dc_other
	@printf '\nAll dc tests passed.\n\n$(TEST_STARS)\n'

test_dc_tests: test_dc_decimal test_dc_length test_dc_stack_len test_dc_exec_stack_len test_dc_add test_dc_subtract test_dc_multiply test_dc_divide test_dc_modulus test_dc_divmod test_dc_power test_dc_sqrt test_dc_modexp test_dc_boolean test_dc_negate test_dc_trunc test_dc_places test_dc_shift test_dc_abs test_dc_scientific test_dc_engineering test_dc_vars test_dc_misc test_dc_misc1 test_dc_strings test_dc_rand test_dc_is_number test_dc_is_string

test_dc_scripts: test_dc_script_prime test_dc_script_asciify test_dc_script_stream test_dc_script_array test_dc_script_else test_dc_script_factorial test_dc_script_loop test_dc_script_quit test_dc_script_weird test_dc_script_no_clamp

test_dc_stdin:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/stdin.sh dc $(DC_EXEC)

test_dc_read:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/read.sh dc $(DC_EXEC)

test_dc_errors: test_dc_error_lines test_dc_error_01.txt test_dc_error_02.txt test_dc_error_03.txt test_dc_error_04.txt test_dc_error_05.txt test_dc_error_06.txt test_dc_error_07.txt test_dc_error_08.txt test_dc_error_09.txt test_dc_error_10.txt test_dc_error_11.txt test_dc_error_12.txt test_dc_error_13.txt test_dc_error_14.txt test_dc_error_15.txt test_dc_error_16.txt test_dc_error_17.txt test_dc_error_18.txt test_dc_error_19.txt test_dc_error_20.txt test_dc_error_21.txt test_dc_error_22.txt test_dc_error_23.txt test_dc_error_24.txt test_dc_error_25.txt test_dc_error_26.txt test_dc_error_27.txt test_dc_error_28.txt test_dc_error_29.txt test_dc_error_30.txt test_dc_error_31.txt test_dc_error_32.txt test_dc_error_33.txt

test_dc_error_lines:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/errors.sh dc $(DC_EXEC)

test_dc_other:
	@export BC_TEST_OUTPUT_DIR="$(BUILDDIR)/tests"; sh $(TESTSDIR)/other.sh dc $(BC_ENABLE_EXTRA_MATH) $(DC_EXEC)

test_dc_header:
	@printf '$(TEST_STARS)\n\nRunning dc tests...\n\n'

timeconst:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; $(TESTSDIR)/bc/timeconst.sh $(TESTSDIR)/bc/scripts/timeconst.bc $(BC_EXEC)

test_history: test_history_header test_bc_history test_dc_history
	@printf '\nAll history tests passed.\n\n$(TEST_STARS)\n'

test_bc_history: test_bc_history_skip

test_bc_history_all: test_bc_history0 test_bc_history1 test_bc_history2 test_bc_history3 test_bc_history4 test_bc_history5 test_bc_history6 test_bc_history7 test_bc_history8 test_bc_history9 test_bc_history10 test_bc_history11 test_bc_history12 test_bc_history13 test_bc_history14 test_bc_history15 test_bc_history16 test_bc_history17 test_bc_history18 test_bc_history19 test_bc_history20 test_bc_history21

test_bc_history_skip:
	@printf 'No bc history tests to run\n'

test_bc_history0:
	@sh $(TESTSDIR)/history.sh bc 0 $(BC_EXEC)

test_bc_history1:
	@sh $(TESTSDIR)/history.sh bc 1 $(BC_EXEC)

test_bc_history2:
	@sh $(TESTSDIR)/history.sh bc 2 $(BC_EXEC)

test_bc_history3:
	@sh $(TESTSDIR)/history.sh bc 3 $(BC_EXEC)

test_bc_history4:
	@sh $(TESTSDIR)/history.sh bc 4 $(BC_EXEC)

test_bc_history5:
	@sh $(TESTSDIR)/history.sh bc 5 $(BC_EXEC)

test_bc_history6:
	@sh $(TESTSDIR)/history.sh bc 6 $(BC_EXEC)

test_bc_history7:
	@sh $(TESTSDIR)/history.sh bc 7 $(BC_EXEC)

test_bc_history8:
	@sh $(TESTSDIR)/history.sh bc 8 $(BC_EXEC)

test_bc_history9:
	@sh $(TESTSDIR)/history.sh bc 9 $(BC_EXEC)

test_bc_history10:
	@sh $(TESTSDIR)/history.sh bc 10 $(BC_EXEC)

test_bc_history11:
	@sh $(TESTSDIR)/history.sh bc 11 $(BC_EXEC)

test_bc_history12:
	@sh $(TESTSDIR)/history.sh bc 12 $(BC_EXEC)

test_bc_history13:
	@sh $(TESTSDIR)/history.sh bc 13 $(BC_EXEC)

test_bc_history14:
	@sh $(TESTSDIR)/history.sh bc 14 $(BC_EXEC)

test_bc_history15:
	@sh $(TESTSDIR)/history.sh bc 15 $(BC_EXEC)

test_bc_history16:
	@sh $(TESTSDIR)/history.sh bc 16 $(BC_EXEC)

test_bc_history17:
	@sh $(TESTSDIR)/history.sh bc 17 $(BC_EXEC)

test_bc_history18:
	@sh $(TESTSDIR)/history.sh bc 18 $(BC_EXEC)

test_bc_history19:
	@sh $(TESTSDIR)/history.sh bc 19 $(BC_EXEC)

test_bc_history20:
	@sh $(TESTSDIR)/history.sh bc 20 $(BC_EXEC)

test_bc_history21:
	@sh $(TESTSDIR)/history.sh bc 21 $(BC_EXEC)

test_dc_history: test_dc_history_skip

test_dc_history_all: test_dc_history0 test_dc_history1 test_dc_history2 test_dc_history3 test_dc_history4 test_dc_history5 test_dc_history6 test_dc_history7 test_dc_history8 test_dc_history9 test_dc_history10

test_dc_history_skip:
	@printf 'No dc history tests to run\n'

test_dc_history0:
	@sh $(TESTSDIR)/history.sh dc 0 $(DC_EXEC)

test_dc_history1:
	@sh $(TESTSDIR)/history.sh dc 1 $(DC_EXEC)

test_dc_history2:
	@sh $(TESTSDIR)/history.sh dc 2 $(DC_EXEC)

test_dc_history3:
	@sh $(TESTSDIR)/history.sh dc 3 $(DC_EXEC)

test_dc_history4:
	@sh $(TESTSDIR)/history.sh dc 4 $(DC_EXEC)

test_dc_history5:
	@sh $(TESTSDIR)/history.sh dc 5 $(DC_EXEC)

test_dc_history6:
	@sh $(TESTSDIR)/history.sh dc 6 $(DC_EXEC)

test_dc_history7:
	@sh $(TESTSDIR)/history.sh dc 7 $(DC_EXEC)

test_dc_history8:
	@sh $(TESTSDIR)/history.sh dc 8 $(DC_EXEC)

test_dc_history9:
	@sh $(TESTSDIR)/history.sh dc 9 $(DC_EXEC)

test_dc_history10:
	@sh $(TESTSDIR)/history.sh dc 10 $(DC_EXEC)

test_history_header:
	@printf '$(TEST_STARS)\n\nRunning history tests...\n\n'

library_test: $(LIBBC)
	$(CC) $(CFLAGS) -lpthread $(BCL_TEST_C) $(LIBBC) -o $(BCL_TEST)

test_library: library_test
	$(BCL_TEST)

karatsuba:
	@$(KARATSUBA) 30 0 $(BC_EXEC)

karatsuba_test:
	@$(KARATSUBA) 1 100 $(BC_EXEC)

coverage_output:
	@printf 'Coverage not generated\n'

coverage:

manpages:
	$(MANPAGE) bc
	$(MANPAGE) dc
	$(MANPAGE) bcl

clean_gen:
	@$(RM) -f $(GEN_EXEC)

clean: clean_gen clean_coverage
	@printf 'Cleaning files...\n'
	@$(RM) -f src/*.tmp gen/*.tmp
	@$(RM) -f $(OBJ)
	@$(RM) -f $(BC_EXEC)
	@$(RM) -f $(DC_EXEC)
	@$(RM) -fr $(BIN)
	@$(RM) -f $(BC_LIB_C) $(BC_LIB_O)
	@$(RM) -f $(BC_LIB2_C) $(BC_LIB2_O)
	@$(RM) -f $(BC_HELP_C) $(BC_HELP_O)
	@$(RM) -f $(DC_HELP_C) $(DC_HELP_O)
	@$(RM) -fr vs/bin/ vs/lib/

clean_benchmarks:
	@printf 'Cleaning benchmarks...\n'
	@$(RM) -f $(MINISTAT_EXEC)
	@$(RM) -f $(ROOTDIR)/benchmarks/bc/*.txt
	@$(RM) -f $(ROOTDIR)/benchmarks/dc/*.txt

clean_config: clean clean_benchmarks
	@printf 'Cleaning config...\n'
	@$(RM) -f Makefile
	@$(RM) -f $(BC_MD) $(BC_MANPAGE)
	@$(RM) -f $(DC_MD) $(DC_MANPAGE)
	@$(RM) -f compile_commands.json
	@$(RM) -f $(BCL_PC)

clean_coverage:
	@printf 'Cleaning coverage files...\n'
	@$(RM) -f *.gcov
	@$(RM) -f *.html *.css
	@$(RM) -f *.gcda *.gcno
	@$(RM) -f *.profraw
	@$(RM) -f $(GCDA) $(GCNO)
	@$(RM) -f $(BC_GCDA) $(BC_GCNO)
	@$(RM) -f $(DC_GCDA) $(DC_GCNO)
	@$(RM) -f $(HISTORY_GCDA) $(HISTORY_GCNO)
	@$(RM) -f $(RAND_GCDA) $(RAND_GCNO)
	@$(RM) -f $(BC_LIB_GCDA) $(BC_LIB_GCNO)
	@$(RM) -f $(BC_LIB2_GCDA) $(BC_LIB2_GCNO)
	@$(RM) -f $(BC_HELP_GCDA) $(BC_HELP_GCNO)
	@$(RM) -f $(DC_HELP_GCDA) $(DC_HELP_GCNO)

clean_tests: clean clean_config clean_coverage
	@printf 'Cleaning test files...\n'
	@$(RM) -fr $(BC_TEST_OUTPUTS) $(DC_TEST_OUTPUTS)
	@$(RM) -fr $(BC_FUZZ_OUTPUTS) $(DC_FUZZ_OUTPUTS)
	@$(RM) -f $(TESTSDIR)/bc/parse.txt $(TESTSDIR)/bc/parse_results.txt
	@$(RM) -f $(TESTSDIR)/bc/print.txt $(TESTSDIR)/bc/print_results.txt
	@$(RM) -f $(TESTSDIR)/bc/bessel.txt $(TESTSDIR)/bc/bessel_results.txt
	@$(RM) -f $(TESTSDIR)/bc/strings2.txt $(TESTSDIR)/bc/strings2_results.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/bessel.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/parse.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/print.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/add.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/divide.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/multiply.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/subtract.txt
	@$(RM) -f $(TESTSDIR)/bc/scripts/strings2.txt
	@$(RM) -f $(TESTSDIR)/dc/scripts/prime.txt
	@$(RM) -f .log_*.txt
	@$(RM) -f .math.txt .results.txt .ops.txt
	@$(RM) -f .test.txt
	@$(RM) -f tags .gdbbreakpoints .gdb_history .gdbsetup
	@$(RM) -f cscope.*
	@$(RM) -f bc.old
	@$(RM) -f $(BITFUNCGEN_EXEC)

install_locales:
	$(LOCALE_INSTALL) $(NLSPATH) $(MAIN_EXEC) $(DESTDIR)

install_bc_manpage:
	$(SAFE_INSTALL) $(MANPAGE_INSTALL_ARGS) $(BC_MANPAGE) $(DESTDIR)$(MAN1DIR)/$(BC_MANPAGE_NAME)

install_dc_manpage:
	$(SAFE_INSTALL) $(MANPAGE_INSTALL_ARGS) $(DC_MANPAGE) $(DESTDIR)$(MAN1DIR)/$(DC_MANPAGE_NAME)

install_bcl_manpage:
	$(SAFE_INSTALL) $(MANPAGE_INSTALL_ARGS) $(BCL_MANPAGE) $(DESTDIR)$(MAN3DIR)/$(BCL_MANPAGE_NAME)

install_bcl_header:
	$(SAFE_INSTALL) $(MANPAGE_INSTALL_ARGS) $(BCL_HEADER) $(DESTDIR)$(INCLUDEDIR)/$(BCL_HEADER_NAME)

install_execs:
	$(INSTALL) $(DESTDIR)$(BINDIR) "$(EXEC_SUFFIX)" "$(BUILDDIR)/bin"

install_library: install_bcl_header
	$(SAFE_INSTALL) $(BINARY_INSTALL_ARGS) $(LIBBC) $(DESTDIR)$(LIBDIR)/$(LIB_NAME)
	

install: install_locales install_bc_manpage install_dc_manpage install_execs

uninstall_locales:
	$(LOCALE_UNINSTALL) $(NLSPATH) $(MAIN_EXEC) $(DESTDIR)

uninstall_bc_manpage:
	$(RM) -f $(DESTDIR)$(MAN1DIR)/$(BC_MANPAGE_NAME)

uninstall_bc:
	$(RM) -f $(DESTDIR)$(BINDIR)/$(EXEC_PREFIX)$(BC)$(EXEC_SUFFIX)

uninstall_dc_manpage:
	$(RM) -f $(DESTDIR)$(MAN1DIR)/$(DC_MANPAGE_NAME)

uninstall_dc:
	$(RM) -f $(DESTDIR)$(BINDIR)/$(EXEC_PREFIX)$(DC)$(EXEC_SUFFIX)

uninstall_library: uninstall_bcl_header
	$(RM) -f $(DESTDIR)$(LIBDIR)/$(LIB_NAME)
	

uninstall_bcl_header:
	$(RM) -f $(DESTDIR)$(INCLUDEDIR)/$(BCL_HEADER_NAME)

uninstall_bcl_manpage:
	$(RM) -f $(DESTDIR)$(MAN3DIR)/$(BCL_MANPAGE_NAME)

uninstall: uninstall_locales uninstall_bc_manpage uninstall_dc_manpage uninstall_bc uninstall_dc


src/args.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/args.c
	$(CC) $(CFLAGS) -o src/args.o -c ./src/args.c

src/bc.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/bc.c
	$(CC) $(CFLAGS) -o src/bc.o -c ./src/bc.c

src/bc_lex.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/bc_lex.c
	$(CC) $(CFLAGS) -o src/bc_lex.o -c ./src/bc_lex.c

src/bc_parse.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/bc_parse.c
	$(CC) $(CFLAGS) -o src/bc_parse.o -c ./src/bc_parse.c

src/data.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/data.c
	$(CC) $(CFLAGS) -o src/data.o -c ./src/data.c

src/dc.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/dc.c
	$(CC) $(CFLAGS) -o src/dc.o -c ./src/dc.c

src/dc_lex.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/dc_lex.c
	$(CC) $(CFLAGS) -o src/dc_lex.o -c ./src/dc_lex.c

src/dc_parse.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/dc_parse.c
	$(CC) $(CFLAGS) -o src/dc_parse.o -c ./src/dc_parse.c

src/file.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/file.c
	$(CC) $(CFLAGS) -o src/file.o -c ./src/file.c

src/lang.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/lang.c
	$(CC) $(CFLAGS) -o src/lang.o -c ./src/lang.c

src/lex.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/lex.c
	$(CC) $(CFLAGS) -o src/lex.o -c ./src/lex.c

src/main.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/main.c
	$(CC) $(CFLAGS) -o src/main.o -c ./src/main.c

src/num.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/num.c
	$(CC) $(CFLAGS) -o src/num.o -c ./src/num.c

src/opt.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/opt.c
	$(CC) $(CFLAGS) -o src/opt.o -c ./src/opt.c

src/parse.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/parse.c
	$(CC) $(CFLAGS) -o src/parse.o -c ./src/parse.c

src/program.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/program.c
	$(CC) $(CFLAGS) -o src/program.o -c ./src/program.c

src/rand.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/rand.c
	$(CC) $(CFLAGS) -o src/rand.o -c ./src/rand.c

src/read.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/read.c
	$(CC) $(CFLAGS) -o src/read.o -c ./src/read.c

src/vector.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/vector.c
	$(CC) $(CFLAGS) -o src/vector.o -c ./src/vector.c

src/vm.o: src $(HEADERS) $(EXTRA_MATH_HEADERS) $(BC_HEADERS) $(DC_HEADERS) ./src/vm.c
	$(CC) $(CFLAGS) -o src/vm.o -c ./src/vm.c

test_bc_decimal:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc decimal 0 0 $(BC_EXEC)

test_bc_print:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc print 0 0 $(BC_EXEC)

test_bc_parse:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc parse 0 0 $(BC_EXEC)

test_bc_lib2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc lib2 0 0 $(BC_EXEC)

test_bc_print2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc print2 0 0 $(BC_EXEC)

test_bc_length:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc length 0 0 $(BC_EXEC)

test_bc_scale:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc scale 0 0 $(BC_EXEC)

test_bc_shift:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc shift 0 0 $(BC_EXEC)

test_bc_add:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc add 0 0 $(BC_EXEC)

test_bc_subtract:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc subtract 0 0 $(BC_EXEC)

test_bc_multiply:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc multiply 0 0 $(BC_EXEC)

test_bc_divide:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc divide 0 0 $(BC_EXEC)

test_bc_modulus:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc modulus 0 0 $(BC_EXEC)

test_bc_power:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc power 0 0 $(BC_EXEC)

test_bc_sqrt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc sqrt 0 0 $(BC_EXEC)

test_bc_trunc:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc trunc 0 0 $(BC_EXEC)

test_bc_places:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc places 0 0 $(BC_EXEC)

test_bc_vars:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc vars 0 0 $(BC_EXEC)

test_bc_boolean:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc boolean 0 0 $(BC_EXEC)

test_bc_comp:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc comp 0 0 $(BC_EXEC)

test_bc_abs:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc abs 0 0 $(BC_EXEC)

test_bc_assignments:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc assignments 0 0 $(BC_EXEC)

test_bc_functions:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc functions 0 0 $(BC_EXEC)

test_bc_scientific:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc scientific 0 0 $(BC_EXEC)

test_bc_engineering:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc engineering 0 0 $(BC_EXEC)

test_bc_globals:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc globals 0 0 $(BC_EXEC)

test_bc_strings:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc strings 0 0 $(BC_EXEC)

test_bc_strings2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc strings2 0 0 $(BC_EXEC)

test_bc_letters:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc letters 0 0 $(BC_EXEC)

test_bc_exponent:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc exponent 0 0 $(BC_EXEC)

test_bc_log:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc log 0 0 $(BC_EXEC)

test_bc_pi:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc pi 0 0 $(BC_EXEC)

test_bc_arctangent:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc arctangent 0 0 $(BC_EXEC)

test_bc_sine:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc sine 0 0 $(BC_EXEC)

test_bc_cosine:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc cosine 0 0 $(BC_EXEC)

test_bc_bessel:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc bessel 0 0 $(BC_EXEC)

test_bc_fib:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc fib 0 0 $(BC_EXEC)

test_bc_arrays:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc arrays 0 0 $(BC_EXEC)

test_bc_misc:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc 0 0 $(BC_EXEC)

test_bc_misc1:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc1 0 0 $(BC_EXEC)

test_bc_misc2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc2 0 0 $(BC_EXEC)

test_bc_misc3:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc3 0 0 $(BC_EXEC)

test_bc_misc4:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc4 0 0 $(BC_EXEC)

test_bc_misc5:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc5 0 0 $(BC_EXEC)

test_bc_misc6:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc6 0 0 $(BC_EXEC)

test_bc_misc7:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc7 0 0 $(BC_EXEC)

test_bc_misc8:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc misc8 0 0 $(BC_EXEC)

test_bc_void:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc void 0 0 $(BC_EXEC)

test_bc_rand:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc rand 0 0 $(BC_EXEC)

test_bc_rand_limits:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc rand_limits 0 0 $(BC_EXEC)

test_bc_recursive_arrays:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc recursive_arrays 0 0 $(BC_EXEC)

test_bc_divmod:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc divmod 0 0 $(BC_EXEC)

test_bc_modexp:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc modexp 0 0 $(BC_EXEC)

test_bc_bitfuncs:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc bitfuncs 0 0 $(BC_EXEC)

test_bc_leadingzero:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc leadingzero 0 0 $(BC_EXEC)

test_bc_is_number:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc is_number 0 0 $(BC_EXEC)

test_bc_is_string:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc is_string 0 0 $(BC_EXEC)

test_bc_asciify_array:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc asciify_array 0 0 $(BC_EXEC)

test_bc_line_by_line1:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc line_by_line1 0 0 $(BC_EXEC)

test_bc_line_by_line2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc line_by_line2 0 0 $(BC_EXEC)

test_bc_line_loop_quit1:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc line_loop_quit1 0 0 $(BC_EXEC)

test_bc_line_loop_quit2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh bc line_loop_quit2 0 0 $(BC_EXEC)

test_bc_script_multiply:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc multiply.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_divide:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc divide.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_subtract:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc subtract.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_add:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc add.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_print:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc print.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_parse:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc parse.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_root:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc root.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_array:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc array.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_array2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc array2.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_atan:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc atan.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_bessel:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc bessel.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_functions:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc functions.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_globals:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc globals.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_len:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc len.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_rand:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc rand.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_references:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc references.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_screen:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc screen.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_strings2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc strings2.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_ifs:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc ifs.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_ifs2:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc ifs2.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_afl1:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc afl1.bc 1 1 0 0 $(BC_EXEC)

test_bc_script_i2rand:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh bc i2rand.bc 1 1 0 0 $(BC_EXEC)

test_bc_error_01.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 01.txt 1 $(BC_EXEC)

test_bc_error_02.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 02.txt 1 $(BC_EXEC)

test_bc_error_03.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 03.txt 1 $(BC_EXEC)

test_bc_error_04.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 04.txt 1 $(BC_EXEC)

test_bc_error_05.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 05.txt 1 $(BC_EXEC)

test_bc_error_06.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 06.txt 1 $(BC_EXEC)

test_bc_error_07.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 07.txt 1 $(BC_EXEC)

test_bc_error_08.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 08.txt 1 $(BC_EXEC)

test_bc_error_09.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 09.txt 1 $(BC_EXEC)

test_bc_error_10.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 10.txt 1 $(BC_EXEC)

test_bc_error_11.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 11.txt 1 $(BC_EXEC)

test_bc_error_12.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 12.txt 1 $(BC_EXEC)

test_bc_error_13.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 13.txt 1 $(BC_EXEC)

test_bc_error_14.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 14.txt 1 $(BC_EXEC)

test_bc_error_15.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 15.txt 1 $(BC_EXEC)

test_bc_error_16.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 16.txt 1 $(BC_EXEC)

test_bc_error_17.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 17.txt 1 $(BC_EXEC)

test_bc_error_18.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 18.txt 1 $(BC_EXEC)

test_bc_error_19.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 19.txt 1 $(BC_EXEC)

test_bc_error_20.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 20.txt 1 $(BC_EXEC)

test_bc_error_21.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 21.txt 1 $(BC_EXEC)

test_bc_error_22.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 22.txt 1 $(BC_EXEC)

test_bc_error_23.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 23.txt 1 $(BC_EXEC)

test_bc_error_24.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 24.txt 1 $(BC_EXEC)

test_bc_error_25.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 25.txt 1 $(BC_EXEC)

test_bc_error_26.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 26.txt 1 $(BC_EXEC)

test_bc_error_27.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 27.txt 1 $(BC_EXEC)

test_bc_error_28.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 28.txt 1 $(BC_EXEC)

test_bc_error_29.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 29.txt 1 $(BC_EXEC)

test_bc_error_30.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 30.txt 1 $(BC_EXEC)

test_bc_error_31.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 31.txt 1 $(BC_EXEC)

test_bc_error_32.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 32.txt 1 $(BC_EXEC)

test_bc_error_33.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 33.txt 1 $(BC_EXEC)

test_bc_error_34.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 34.txt 1 $(BC_EXEC)

test_bc_error_35.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 35.txt 1 $(BC_EXEC)

test_bc_error_36.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh bc 36.txt 1 $(BC_EXEC)

test_dc_decimal:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc decimal 0 0 $(DC_EXEC)

test_dc_length:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc length 0 0 $(DC_EXEC)

test_dc_stack_len:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc stack_len 0 0 $(DC_EXEC)

test_dc_exec_stack_len:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc exec_stack_len 0 0 $(DC_EXEC)

test_dc_add:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc add 0 0 $(DC_EXEC)

test_dc_subtract:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc subtract 0 0 $(DC_EXEC)

test_dc_multiply:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc multiply 0 0 $(DC_EXEC)

test_dc_divide:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc divide 0 0 $(DC_EXEC)

test_dc_modulus:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc modulus 0 0 $(DC_EXEC)

test_dc_divmod:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc divmod 0 0 $(DC_EXEC)

test_dc_power:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc power 0 0 $(DC_EXEC)

test_dc_sqrt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc sqrt 0 0 $(DC_EXEC)

test_dc_modexp:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc modexp 0 0 $(DC_EXEC)

test_dc_boolean:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc boolean 0 0 $(DC_EXEC)

test_dc_negate:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc negate 0 0 $(DC_EXEC)

test_dc_trunc:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc trunc 0 0 $(DC_EXEC)

test_dc_places:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc places 0 0 $(DC_EXEC)

test_dc_shift:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc shift 0 0 $(DC_EXEC)

test_dc_abs:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc abs 0 0 $(DC_EXEC)

test_dc_scientific:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc scientific 0 0 $(DC_EXEC)

test_dc_engineering:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc engineering 0 0 $(DC_EXEC)

test_dc_vars:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc vars 0 0 $(DC_EXEC)

test_dc_misc:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc misc 0 0 $(DC_EXEC)

test_dc_misc1:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc misc1 0 0 $(DC_EXEC)

test_dc_strings:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc strings 0 0 $(DC_EXEC)

test_dc_rand:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc rand 0 0 $(DC_EXEC)

test_dc_is_number:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc is_number 0 0 $(DC_EXEC)

test_dc_is_string:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/test.sh dc is_string 0 0 $(DC_EXEC)

test_dc_script_prime:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc prime.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_asciify:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc asciify.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_stream:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc stream.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_array:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc array.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_else:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc else.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_factorial:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc factorial.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_loop:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc loop.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_quit:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc quit.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_weird:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc weird.dc 1 1 0 0 $(DC_EXEC)

test_dc_script_no_clamp:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/script.sh dc no_clamp.dc 1 1 0 0 $(DC_EXEC)

test_dc_error_01.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 01.txt 1 $(DC_EXEC)

test_dc_error_02.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 02.txt 1 $(DC_EXEC)

test_dc_error_03.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 03.txt 1 $(DC_EXEC)

test_dc_error_04.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 04.txt 1 $(DC_EXEC)

test_dc_error_05.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 05.txt 1 $(DC_EXEC)

test_dc_error_06.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 06.txt 1 $(DC_EXEC)

test_dc_error_07.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 07.txt 1 $(DC_EXEC)

test_dc_error_08.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 08.txt 1 $(DC_EXEC)

test_dc_error_09.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 09.txt 1 $(DC_EXEC)

test_dc_error_10.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 10.txt 1 $(DC_EXEC)

test_dc_error_11.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 11.txt 1 $(DC_EXEC)

test_dc_error_12.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 12.txt 1 $(DC_EXEC)

test_dc_error_13.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 13.txt 1 $(DC_EXEC)

test_dc_error_14.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 14.txt 1 $(DC_EXEC)

test_dc_error_15.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 15.txt 1 $(DC_EXEC)

test_dc_error_16.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 16.txt 1 $(DC_EXEC)

test_dc_error_17.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 17.txt 1 $(DC_EXEC)

test_dc_error_18.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 18.txt 1 $(DC_EXEC)

test_dc_error_19.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 19.txt 1 $(DC_EXEC)

test_dc_error_20.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 20.txt 1 $(DC_EXEC)

test_dc_error_21.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 21.txt 1 $(DC_EXEC)

test_dc_error_22.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 22.txt 1 $(DC_EXEC)

test_dc_error_23.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 23.txt 1 $(DC_EXEC)

test_dc_error_24.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 24.txt 1 $(DC_EXEC)

test_dc_error_25.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 25.txt 1 $(DC_EXEC)

test_dc_error_26.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 26.txt 1 $(DC_EXEC)

test_dc_error_27.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 27.txt 1 $(DC_EXEC)

test_dc_error_28.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 28.txt 1 $(DC_EXEC)

test_dc_error_29.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 29.txt 1 $(DC_EXEC)

test_dc_error_30.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 30.txt 1 $(DC_EXEC)

test_dc_error_31.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 31.txt 1 $(DC_EXEC)

test_dc_error_32.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 32.txt 1 $(DC_EXEC)

test_dc_error_33.txt:
	@export BC_TEST_OUTPUT_DIR="/home/user/bc/tests"; sh $(TESTSDIR)/error.sh dc 33.txt 1 $(DC_EXEC)

