#!/bin/ksh

# WORK IN PROGRESS. Not ready for use yet.

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#											#
#	Copyright (c) 2023, Ian LeCorbeau <I-LeCorbeau (at) protonmail (dot) com>	#
#											#
#	Permission to use, copy, modify, and/or distribute this software for any	#
#	purpose with or without fee is hereby granted, provided that the above		#
#	copyright notice and this permission notice appear in all copies.		#
#											#
#	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	#
#	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF		#
#	MERCHANTABILITY AND FITNESS IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR		#
#	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES		#
#	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN		#
#	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF		#
#	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.			#
#											#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

. /usr/lib/ragnarok-shlib

# Variables which can be overridden
TARGET=${TARGET:-/usr/src}
DATE=${DATE:-$(date +"%Y%m%d")}
CONFIG=${CONFIG:-/etc/mkchroot/chroot.conf}

# Parsing global config options
_name=$(getvar NAME "$CONFIG")
_version=$(getvar VERSION "$CONFIG")
_type=$(getvar TYPE "$CONFIG")
_parent=$(getvar PARENT "$CONFIG")
_components=$(getvar COMPONENTS "$CONFIG")
_variant=$(getvar VARIANT "$CONFIG")
_format=$(getvar FORMAT "$CONFIG")
_pkgs=$(getvar PKGS "$CONFIG")
_chrootname="${_name}${_version}${_type}"
[[ $_format = tar ]] && _chrootname=$_chrootname.tgz

usage() {
	printf '%s\n' "
mkchroot [option arg]

If no option is given, mkchroot requires root privileges.

Options:
	-h|--help	print this message
	-l|--local	create a chroot as a non-root user and save it to \$TARGET.
			\$TARGET needs to be a path that is writable by the user in
			order for this to work. e.g.

			mkchroot -l /home/<username>/.local

			Note that file systems created without root privileges will
			not have proper permissions, so they shouldn't be used for
			creating installable systems.

Variables:

	The following variables can be overriden on the command line:

	\$TARGET	the directory where the chroot will be saved
	\$DATE		the format of the date string to be added to the chroot name
			(can be blank)
	\$CONFIG	path to the chroot's config file. Default: /etc/mkchroot/chroot.conf

Overriding CONFIG is useful when multiple config files are present (i.e. Ragnarok uses a
separate config file to generate a chroot for full systems using the following command:

	CONFIG=/etc/mkchroot/minbase.conf mkchroot
"
}

mk_rootfs() {
	mkdir -p "$TARGET"
	SOURCE_DATE_EPOCH=$(date +%s) /usr/bin/mmdebstrap --format="$_format" --variant="$_variant" \
		--components="$_components" \
		--include="$_pkgs" \
		--hook-directory="/usr/share/mkchroot/hooks" \
		"$_parent" "$TARGET"/"$_chrootname"
}

# If the user isn't root and the -l/--local option isn't used
# print error message and exit 1.
if [[ $(id -u) -ne 0 ]] && [[ -z $1 ]]; then
	usage
	exit 1
fi

case "$1" in
	-h|--help) usage ;;
	-l|--local) TARGET="$2" ;;
esac
mk_rootfs
